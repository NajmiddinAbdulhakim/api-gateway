definitions:
  model.Address:
    properties:
      city:
        type: string
      country:
        type: string
      district:
        type: string
      id:
        type: string
      postal_code:
        type: string
    type: object
  model.Media:
    properties:
      id:
        type: string
      link:
        type: string
      post_id:
        type: string
      type:
        type: string
    type: object
  model.Post:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/model.Media'
        type: array
      title:
        type: string
      updatedAt:
        type: string
      user_id:
        type: string
    type: object
  model.UpdateUserReq:
    properties:
      addresses:
        items:
          $ref: '#/definitions/model.Address'
        type: array
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        items:
          type: string
        type: array
      status:
        type: string
      user_name:
        type: string
    type: object
  model.User:
    properties:
      addresses:
        items:
          $ref: '#/definitions/model.Address'
        type: array
      bio:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        items:
          type: string
        type: array
      posts:
        items:
          $ref: '#/definitions/model.Post'
        type: array
      status:
        type: string
      updatedAt:
        type: string
      user_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/users:
    get:
      consumes:
      - application/json
      description: This api is using for getting users list
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get User list summary
    post:
      consumes:
      - application/json
      description: This api is using create new user
      parameters:
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create user summary
      tags:
      - User
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: This api is using delete user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete user summary
      tags:
      - User
    get:
      consumes:
      - application/json
      description: This api is using getting by id with posts
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get User By Id With Posts summary
    put:
      consumes:
      - application/json
      description: This api is using update user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update user summary
      tags:
      - User
swagger: "2.0"
